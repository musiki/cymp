---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import ThemeToggle from '../components/ThemeToggle.astro';

import fs from 'node:fs';
import path from 'node:path';
import matter from 'gray-matter';

const ROOT = path.resolve('src/content');
const files: string[] = [];

function walk(dir: string) {
  if (!fs.existsSync(dir)) return;
  for (const e of fs.readdirSync(dir, { withFileTypes: true })) {
    const p = path.join(dir, e.name);
    if (e.isDirectory()) walk(p);
    else if (/\.(md|mdx)$/i.test(e.name)) files.push(p);
  }
}
walk(ROOT);

// recolectamos metadata de cada archivo
const entries = files.map((abs) => {
  const rel = abs.slice(ROOT.length + 1);
  const posix = rel.split(path.sep).join('/');
  const slug = posix.replace(/\.(md|mdx)$/i, '');
  const segs = slug.split('/');

  const raw = fs.readFileSync(abs, 'utf8');
  const fm = matter(raw);

  return {
    slug,
    root: segs[0],               // carpeta raíz
    sub: segs.length > 2 ? `${segs[0]}/${segs[1]}` : (segs[1] || ''), // subcarpeta inmediata
    title: fm.data.title || segs[segs.length - 1],
    year: fm.data.year || '',
    person: fm.data.person || '',
    img: fm.data.img || fm.data.coverUrl || fm.data.image || fm.data.photo || '',
    tags: Array.isArray(fm.data.tags)
      ? fm.data.tags
      : (fm.data.tags ? String(fm.data.tags).split(',').map((s) => s.trim()) : []),
  };
});

// grupos jerárquicos
const roots = Array.from(new Set(entries.map(e => e.root))).sort();
const subs = Array.from(new Set(entries.map(e => e.sub).filter(Boolean))).sort();
---

<html lang="es">
  <head>
    <BaseHead title="contenidos públicos" description="Repositorio de contenidos" />
    <meta charset="utf-8" />
    <link rel="stylesheet" href="/styles/theme.css" />
    <style>
      .filters { margin: 1rem 0; display: flex; gap: 1rem; }
      select { padding: 0.3rem; }
      .gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 1rem;
      }
      .card {
        border: 1px solid var(--c-border);
        border-radius: 8px;
        overflow: hidden;
        background: var(--c-bg);
        display: flex;
        flex-direction: column;
      }
      .card img { width: 100%; height: 140px; object-fit: cover; }
      .card-body { padding: 0.5rem 0.75rem; flex:1; display:flex; flex-direction:column; }
      .title { margin:0; font-size: 1rem; font-weight:600; }
      .meta { font-size: .8rem; color: var(--c-subtle); margin:.25rem 0; }
      .tags { display:flex; gap:.25rem; flex-wrap:wrap; margin-top:auto; }
      .tag { font-size: .7rem; padding: .1rem .4rem; border:1px solid var(--c-border); border-radius:6px; }
    </style>
  </head>
  <body>
    <Header>
      <div style="margin-left:auto"><ThemeToggle /></div>
    </Header>

    <main class="wrap">
      <h1>contenidos públicos</h1>

      <div class="filters">
        <label>
          Carpeta raíz:
          <select id="rootFilter">
            <option value="">Todas</option>
            {roots.map(r => <option value={r}>{r}</option>)}
          </select>
        </label>
        <label>
          Subcarpeta:
          <select id="subFilter">
            <option value="">Todas</option>
            {subs.map(s => <option value={s}>{s}</option>)}
          </select>
        </label>
      </div>

      <div id="gallery" class="gallery">
        {entries.map(e => (
          <a href={`/blog/${e.slug}`} class="card" data-root={e.root} data-sub={e.sub}>
            {e.img && <img src={e.img} alt={e.title} />}
            <div class="card-body">
              <h3 class="title">{e.title}</h3>
              {(e.year || e.person) && <p class="meta">{e.year}{(e.year && e.person) ? ' · ' : ''}{e.person}</p>}
              {e.tags.length ? <div class="tags">{e.tags.map(t => <span class="tag">#{t}</span>)}</div> : null}
            </div>
          </a>
        ))}
      </div>
    </main>

    <Footer />

    <script>
      const rootSel = document.getElementById('rootFilter');
      const subSel = document.getElementById('subFilter');
      const cards = document.querySelectorAll('#gallery .card');
      function applyFilters() {
        const r = rootSel.value;
        const s = subSel.value;
        cards.forEach(c => {
          const okRoot = !r || c.dataset.root === r;
          const okSub  = !s || c.dataset.sub === s;
          c.style.display = (okRoot && okSub) ? '' : 'none';
        });
      }
      rootSel.addEventListener('change', applyFilters);
      subSel.addEventListener('change', applyFilters);
    </script>
  </body>
</html>